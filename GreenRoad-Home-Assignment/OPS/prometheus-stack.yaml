apiVersion: v1
kind: Namespace
metadata:
  name: greenroad

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: greenroad
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:v2.30.3
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
            - name: prometheus-storage
              mountPath: /prometheus
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
        - name: prometheus-storage
          emptyDir: {}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: greenroad
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['public_ip:30001']
      - job_name: 'your-application'
        metrics_path: /
        static_configs:
          - targets: ['public_ip:31234']

---

apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: greenroad
spec:
  type: NodePort
  ports:
    - port: 9090
      targetPort: 9090
      nodePort: 30001
  selector:
    app: prometheus

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: greenroad
data:
  web-status-dashboard.json: |
  {
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "Check the http status of any service using blackbox exporter. You can also set alerts using the graph.",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "gnetId": 4859,
  "graphTooltip": 0,
  "id": 5,
  "iteration": 1685887706281,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "prometheus",
        "uid": "1_MqZ4_4z"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "yellow",
                "value": null
              },
              {
                "color": "rgba(237, 129, 40, 0.89)",
                "value": 299
              },
              {
                "color": "#d44a3a",
                "value": 499
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 6,
        "x": 0,
        "y": 0
      },
      "id": 1,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.3.0",
      "repeat": "site",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "1_MqZ4_4z"
          },
          "exemplar": false,
          "expr": "up{job=\"prometheus\"}",
          "format": "time_series",
          "instant": true,
          "interval": "",
          "intervalFactor": 2,
          "legendFormat": "",
          "refId": "A"
        }
      ],
      "title": "200 status code(up)",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "1_MqZ4_4z"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "blue",
                "value": null
              },
              {
                "color": "rgba(237, 129, 40, 0.89)",
                "value": 299
              },
              {
                "color": "#d44a3a",
                "value": 499
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 5,
        "x": 6,
        "y": 0
      },
      "id": 2,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.3.0",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "1_MqZ4_4z"
          },
          "exemplar": false,
          "expr": "count(up)",
          "format": "time_series",
          "instant": true,
          "interval": "",
          "intervalFactor": 2,
          "legendFormat": "",
          "refId": "A"
        }
      ],
      "title": "Num of webs",
      "type": "stat"
    }
  ],
  "refresh": "",
  "schemaVersion": 33,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": {
          "type": "prometheus",
          "uid": "1_MqZ4_4z"
        },
        "definition": "",
        "hide": 0,
        "includeAll": true,
        "label": "site",
        "multi": true,
        "name": "site",
        "options": [],
        "query": {
          "query": "label_values(probe_http_status_code, instance)",
          "refId": "Prometheus-site-Variable-Query"
        },
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "HTTP Services Status",
  "uid": "Me0NGV_4k",
  "version": 1,
  "weekStart": ""
}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: greenroad
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:8.3.0
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-dashboards
              mountPath: /etc/grafana/dashboards
      volumes:
        - name: grafana-storage
          emptyDir: {}
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards

---

apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: greenroad
spec:
  type: NodePort
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 30002
  selector:
    app: grafana
