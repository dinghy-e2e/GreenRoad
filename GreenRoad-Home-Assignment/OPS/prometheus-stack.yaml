apiVersion: v1
kind: Namespace
metadata:
  name: greenroad

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: greenroad
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:v2.30.3
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
            - name: prometheus-storage
              mountPath: /prometheus
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
        - name: prometheus-storage
          emptyDir: {}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: greenroad
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['public_ip:30001']
      - job_name: 'itay'
        metrics_path: /
        static_configs:
          - targets: ['public_ip:31234']
      - job_name: 'node'
        static_configs:
          - targets: ['public_ip:30003']

---

apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: greenroad
spec:
  type: NodePort
  ports:
    - port: 9090
      targetPort: 9090
      nodePort: 30001
  selector:
    app: prometheus

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: greenroad
data:
  web-status-dashboard.json: |-
    {{- if .Files.Exists "dashboard.json" }}
    {{- .Files.Get "dashboard.json" | indent 4 }}
    {{- end }}
  grafana.ini: |
    [server]
    root_url = %(protocol)s://%(domain)s:%(http_port)s/
    [datasources]
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://public_ip:30001
        basicAuth: false

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: greenroad
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:8.3.0
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-dashboards
              mountPath: /etc/grafana/dashboards
      volumes:
        - name: grafana-storage
          emptyDir: {}
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards

---

apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: greenroad
spec:
  type: NodePort
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 30002
  selector:
    app: grafana
